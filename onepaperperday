#!/usr/bin/env python

from __future__ import print_function
from bs4 import BeautifulSoup

import datetime
import os
import urllib2
import urlparse
import sys

## TODO: Use pdftitle
## TODO: Convert HTML to PDF?

user_agent = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/33.0.1750.152 Safari/537.36'

def GET(url):
  return urllib2.urlopen(url).read()

def download(url, filename_prefix, override=True):
  req = urllib2.Request(url, headers={'User-Agent': user_agent})
  f_in = urllib2.urlopen(req)
  path = urlparse.urlparse(f_in.geturl()).path
  filename = '{}_{}'.format(filename_prefix, (os.path.basename(path) or 'index.html'))
  if not os.path.exists(filename) or override:
    with open(filename, 'wb') as f_out:
      f_out.write(f_in.read())
  return filename

def timestamp_to_datetime(s):
  return datetime.datetime.fromtimestamp(int(s)).strftime('%Y-%m-%d %H:%M:%S')

def main(args):
  count = int(args[1]) if len(args) > 1 else -1
  html = GET('https://twitter.com/onepaperperday')
  tweets = BeautifulSoup(html).find_all('div', class_='content')

  for tweet in tweets[:count]:
    url = tweet.find('a', attrs={'data-expanded-url': True})
    if not url:
      continue
    url = url['data-expanded-url']
    timestamp = tweet.find('span', attrs={'data-time': True})['data-time']
    datetime = timestamp_to_datetime(timestamp)
    filename = download(url, datetime[:10], override=False)
    print(datetime, '{:<19}'.format(url), filename)

if __name__ == '__main__':
  try:
    main(sys.argv)
  except KeyboardInterrupt:
    pass
